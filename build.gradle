
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent
import org.apache.ivy.core.module.descriptor.DependencyDescriptor
import org.apache.ivy.plugins.resolver.DependencyResolver


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
        classpath "org.apache.ivy:ivy:2.4.0"
    }
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: "io.spring.dependency-management"

group = 'ua.com.dudchenko'
version = '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
    maven{
        url ='http://repo.jenkins-ci.org/releases/'
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src', 'sharedLib/src']
        }
        groovy {
            // all code files will be in either of the folders
            srcDirs += ['src', 'vars', 'init.groovy.d']
        }
        resources {
            srcDirs = ['resources']
        }
    }
    test {
        java {
            srcDirs += ['test']
        }
        groovy {
            // all code files will be in either of the folders
            srcDirs += ['test']
        }
        resources {
            srcDirs += ['resources']
        }
    }
}


dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:2.5.6'
    testImplementation 'junit:junit:4.12'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'

    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.2'
    compile "org.codehaus.groovy:groovy-all:2.5.4"
    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    compile "junit:junit:4.12"
    compile group: 'software.amazon.awssdk', name: 'regions', version: '2.5.32'
    compile group: 'software.amazon.awssdk', name: 'iam', version: '2.5.32'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-iam', version: '1.11.543'
    compile group: 'software.amazon.awssdk', name: 'auth', version: '2.5.32'


    //create symlink in the project root folder to local jenkinssharedlibrary repo
    compile fileTree(include: ['*.jar'], dir: 'libs')

    testCompile "com.lesfurets:jenkins-pipeline-unit:1.1"
    testCompile "junit:junit:4.12"
    testCompile group: 'software.amazon.awssdk', name: 'regions', version: '2.5.32'
    testCompile group: 'software.amazon.awssdk', name: 'iam', version: '2.5.32'
    testCompile group: 'software.amazon.awssdk', name: 'auth', version: '2.5.32'
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
}

test {
    dependsOn cleanTest
    useTestNG(){
        useDefaultListeners = true
        suites('test/testng.xml')
    }
    reports.html.enabled = true

    beforeSuite { descriptor ->
        logger.lifecycle("====================================================")
        logger.lifecycle("Running suite: " + descriptor)
    }

    // Fail the 'test' task on the first test failure
    failFast = true

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_ERROR"
    }

    // show summary
    def results = []
    afterSuite { desc, result -> if (desc.className) { results << result } }

    doLast {
        println "\n---=== TESTS SUMMARY ===---\nTests: ${results.sum { it.testCount }},\n" +
                "Failures: ${results.sum { it.failedTestCount }},\n" +
                "Errors: ${results.sum { it.exceptions.size() }},\n" +
                "Skipped: ${results.sum { it.skippedTestCount }}" +
                "\n---------------------------"
    }

}

